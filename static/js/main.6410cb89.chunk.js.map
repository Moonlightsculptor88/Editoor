{"version":3,"sources":["components/Editor.js","hooks/useLocalStorage.js","App.js","index.js"],"names":["Editor","props","useState","open","setOpen","language","displayName","value","onChange","className","type","onClick","prevOpen","icon","faCompressAlt","faExpandAlt","onBeforeChange","editor","data","options","lineWrapping","lint","mode","lineNumbers","theme","useLocalStorage","key","initialValue","prefixKey","jsonValue","localStorage","getItem","JSON","parse","setValue","useEffect","setItem","stringify","App","html","setHtml","css","setCss","js","setJs","srcDoc","setSrcDoc","timeout","setTimeout","clearTimeout","title","sandbox","frameborder","width","height","ReactDOM","render","document","getElementById"],"mappings":"qPAUe,SAASA,EAAQC,GAE5B,MAAyBC,oBAAS,GAAlC,mBAAOC,EAAP,KAAcC,EAAd,KAGIC,EAIAJ,EAJAI,SACAC,EAGAL,EAHAK,YACAC,EAEAN,EAFAM,MACAC,EACAP,EADAO,SAQJ,OACI,sBAAKC,UAAS,2BAAsBN,EAAO,GAAK,aAAhD,UACI,sBAAKM,UAAU,eAAf,UACKH,EACD,wBACII,KAAK,SACLD,UAAU,sBACVE,QAAS,WAAKP,GAAQ,SAAAQ,GAAQ,OAAKA,MAHvC,SAII,cAAC,IAAD,CAAiBC,KAAQV,EAAOW,IAAgBC,WAGxD,cAAC,aAAD,CACIC,eAjBZ,SAAsBC,EAAQC,EAAMX,GAChCC,EAASD,IAiBDA,MAAOA,EACPE,UAAU,sBACVU,QAAS,CACLC,cAAc,EACdC,MAAM,EACNC,KAAMjB,EACNkB,aAAa,EACbC,MAAO,iBC1CZ,SAASC,EAAgBC,EAAMC,GAC1C,IAAMC,EAHM,WAGeF,EAE3B,EAA0BxB,oBAAS,WAC/B,IAAM2B,EAAYC,aAAaC,QAAQH,GAEvC,OAAiB,MAAbC,EAA0BG,KAAKC,MAAMJ,GAEb,oBAAjBF,EACAA,IAEAA,KARf,mBAAOpB,EAAP,KAAc2B,EAAd,KAkBA,OALAC,qBAAU,WACNL,aAAaM,QAAQR,EAAWI,KAAKK,UAAU9B,MAChD,CAACqB,EAAWrB,IAGR,CAACA,EAAO2B,GC8CJI,MAlEf,WACE,MAAyBb,EAAgB,OAAO,IAAhD,mBAAOc,EAAP,KAAcC,EAAd,KACA,EAAuBf,EAAgB,MAAO,IAA9C,mBAAOgB,EAAP,KAAaC,EAAb,KACA,EAAqBjB,EAAgB,KAAK,IAA1C,mBAAOkB,EAAP,KAAYC,EAAZ,KACA,EAA4B1C,mBAAS,IAArC,mBAAO2C,EAAP,KAAeC,EAAf,KAkBA,OAjBAX,qBAAW,WACT,IAAMY,EAAUC,YAAW,WACzBF,EAAU,iDAAD,OAGSP,EAHT,2CAIUE,EAJV,6CAKWE,EALX,qDAST,KACF,OAAO,kBAAMM,aAAaF,MACzB,CAACR,EAAME,EAAKE,IAKb,gCAEI,sBAAKlC,UAAU,iBAAf,UACE,cAACT,EAAD,CACAK,SAAS,MACTC,YAAY,OACZC,MAAOgC,EACP/B,SAAUgC,IAGV,cAACxC,EAAD,CACAK,SAAS,MACTC,YAAY,MACZC,MAAOkC,EACPjC,SAAUkC,IAGV,cAAC1C,EAAD,CACAK,SAAS,aACTC,YAAY,KACZC,MAAOoC,EACPnC,SAAUoC,OAMZ,qBAAKnC,UAAU,mBAAf,SACA,wBACAoC,OAAUA,EACRK,MAAM,SACNC,QAAQ,gBACRC,YAAY,IACZC,MAAM,OACNC,OAAO,eCzDjBC,IAASC,OAEL,cAAC,EAAD,IAEFC,SAASC,eAAe,W","file":"static/js/main.6410cb89.chunk.js","sourcesContent":["import React , {useState} from 'react';\r\nimport 'codemirror/lib/codemirror.css';\r\nimport 'codemirror/theme/material.css';\r\nimport 'codemirror/mode/xml/xml';\r\nimport 'codemirror/mode/javascript/javascript';\r\nimport 'codemirror/mode/css/css';\r\nimport { Controlled as ControlledEditor} from 'react-codemirror2';\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\r\nimport { faCompressAlt , faExpandAlt } from '@fortawesome/free-solid-svg-icons';\r\n\r\nexport default function Editor( props ) {\r\n\r\n    const [open , setOpen] = useState(true);\r\n\r\n    const {\r\n        language, \r\n        displayName,\r\n        value,\r\n        onChange\r\n    } = props \r\n\r\n    function handleChange(editor, data, value){\r\n        onChange(value)\r\n    }\r\n\r\n\r\n    return (\r\n        <div className={`editor-container ${open ? '' : 'collapsed'}`}>\r\n            <div className=\"editor-title\">\r\n                {displayName}\r\n                <button \r\n                    type=\"button\"\r\n                    className=\"expand-collapse-btn\"\r\n                    onClick={()=>{setOpen(prevOpen => !prevOpen)}}>\r\n                    <FontAwesomeIcon icon = {open ? faCompressAlt : faExpandAlt} />\r\n                </button>\r\n            </div>\r\n            <ControlledEditor \r\n                onBeforeChange={handleChange}\r\n                value={value}\r\n                className=\"code-mirror-wrapper\"\r\n                options={{\r\n                    lineWrapping: true,\r\n                    lint: true,\r\n                    mode: language,\r\n                    lineNumbers: true,\r\n                    theme: 'material'\r\n                }}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n","import React , {useEffect, useState} from 'react'\r\n\r\n const PREFIX = 'editoor-'\r\n\r\nexport default function useLocalStorage(key , initialValue) {\r\n    const prefixKey = PREFIX + key;\r\n\r\n    const [value, setValue] = useState(() =>{\r\n        const jsonValue = localStorage.getItem(prefixKey)\r\n\r\n        if (jsonValue != null) return JSON.parse(jsonValue)\r\n\r\n        if (typeof initialValue === 'function'){\r\n            return initialValue()\r\n        }else {\r\n            return initialValue\r\n        }\r\n\r\n    })\r\n\r\n    useEffect(()=>{\r\n        localStorage.setItem(prefixKey, JSON.stringify(value))\r\n    }, [prefixKey, value])\r\n\r\n\r\n    return [value, setValue]\r\n}\r\n","import Editor from './components/Editor';\nimport React, {useState, useEffect} from 'react';\nimport useLocalStorage from './hooks/useLocalStorage';\n\n\nfunction App() {\n  const [html , setHtml] = useLocalStorage('html','')\n  const [css , setCss] = useLocalStorage('css', '')\n  const [js , setJs] = useLocalStorage('js','')\n  const [srcDoc, setSrcDoc] = useState('')\n  useEffect (() =>{\n    const timeout = setTimeout(() =>{\n      setSrcDoc(\n         `\n              <html>\n                <body>${html}</body>\n                <style>${css}</style>\n                <script>${js}</script>\n              </html>\n           `\n      )\n    },300)\n    return () => clearTimeout(timeout)\n  }, [html, css, js])\n\n  \n\n  return (\n    <div>\n\n        <div className=\" pane top-pane\">\n          <Editor \n          language=\"xml\"\n          displayName=\"HTML\"\n          value={html} \n          onChange={setHtml} \n          />\n\n          <Editor \n          language=\"css\"\n          displayName=\"CSS\"\n          value={css} \n          onChange={setCss} \n          />\n\n          <Editor \n          language=\"javascript\"\n          displayName=\"JS\"\n          value={js} \n          onChange={setJs} \n          />  \n          \n        </div>\n\n\n        <div className=\"pane bottom-pane\">\n        <iframe\n        srcDoc = {srcDoc}\n          title=\"output\"\n          sandbox=\"allow-scripts\"\n          frameborder=\"0\"\n          width=\"100%\"\n          height=\"100%\"\n        ></iframe>\n       </div>\n\n   \n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  \n    <App />\n  ,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}